from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

from loader import dp, db
from states.main import ShopState
from keyboards.default.main_menu import btn_back, btn_order


@dp.message_handler(text='–ö–æ—Ä–∑–∏–Ω–∫–∞', state='*')
async def get_cart_items(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    cart_id = db.select_cart(user_id=user_id)[0]
    items = db.get_all_items(cart_id=cart_id)

    if items:

        text = '<b>–í–∞—à–∏ –∑–∞–∫–∞–∑—ã</b>\n\n'
        markup_orders = ReplyKeyboardMarkup(
            row_width=2,
            resize_keyboard=True
        )

        for name, quantity, price in items:
            text += f"–ë–ª—é–¥–æ: {db.get_data(id=name)[1]}\n" \
                    f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity} —à—Ç.\n" \
                    f"–û–±—â–∞—è —Ü–µ–Ω–∞: {price}$\n\n"

            meal_id = db.get_data(id=name)[0]
            await state.update_data({'meal_id': meal_id})

            markup_orders.insert(KeyboardButton(
                text=f'‚ùå {db.get_data(id=name)[1]} ‚ùå',
                callback_data=f'{meal_id}'
                )
            )

        markup_orders.row(KeyboardButton(
            text='–£–¥–∞–ª–∏—Ç—å –≤—Å–µ'
            ), btn_back, btn_order
        )
        await message.answer(text, reply_markup=markup_orders)
        await ShopState.cart.set()
    else:
        await message.answer('–ó–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç, —Å—Ç–æ–∏–ª–æ –±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å! üòÖ')
        await ShopState.category.set()
